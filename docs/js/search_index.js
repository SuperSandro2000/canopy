var search_data = {"index":{"searchIndex":["build","canuby","git","logging","object","outputs","paths","project","stage","string","base_dir()","build()","build_dir()","clean()","clone()","collect()","const_get()","const_set()","create()","load()","log()","logger()","logger()","main()","msbuild()","new()","new()","path=()","pull()","stage()","stage_dir()","license","readme"],"longSearchIndex":["build","canuby","git","logging","object","outputs","paths","project","stage","string","paths::base_dir()","outputs::build()","paths::build_dir()","stage::clean()","git::clone()","stage::collect()","object#const_get()","object#const_set()","paths::create()","canuby::load()","logging::log()","logging::logger()","object#logger()","canuby::main()","build::msbuild()","canuby::new()","project::new()","project#path=()","git::pull()","outputs::stage()","paths::stage_dir()","",""],"info":[["Build","","Build.html","","<p>Building related methods\n"],["Canuby","","Canuby.html","","<p>Main entry point for executable\nTODO add ability run from current dir and\nuse .json or .rb files for ...\n"],["Git","","Git.html","","<p>Git related methods\n<code>WARNING</code>\nDo not include it as clone\nconflicts with ruby&#39;s inbuilt clone.\n"],["Logging","","Logging.html","","<p>Canuby&#39;s Logger\n"],["Object","","Object.html","",""],["Outputs","","Outputs.html","","<p>Output related methods\n"],["Paths","","Paths.html","","<p>folder and files related methods\n"],["Project","","Project.html","","<p>Holds all properties a Project has\n"],["Stage","","Stage.html","","<p>Staging related methods\n"],["String","","String.html","","<p>Allow easy string formating via string.color\nsupported colors on cmd\nWindows are: bold, negative, black, ...\n"],["base_dir","Paths","Paths.html#method-c-base_dir","(test = false)","<p>returns the dependency folder\n"],["build","Outputs","Outputs.html#method-c-build","(project)","<p>returns a list of the projects output files\n"],["build_dir","Paths","Paths.html#method-c-build_dir","(project)","<p>returns a projects build dir\n"],["clean","Stage","Stage.html#method-c-clean","(project)","<p>delete all staged files from a project\n"],["clone","Git","Git.html#method-c-clone","(project)","<p>clone a projects repository\n"],["collect","Stage","Stage.html#method-c-collect","(project)","<p>collect all stage files from a project\n"],["const_get","Object","Object.html#method-i-const_get","(string)","<p>acces a constant from a string\n"],["const_set","Object","Object.html#method-i-const_set","(string, klass)","<p>creates an instance of the class with the name of string\n"],["create","Paths","Paths.html#method-c-create","(test = false)","<p>create build folders\n"],["load","Canuby","Canuby.html#method-c-load","()",""],["log","Logging","Logging.html#method-c-log","(severity, datetime, progname, msg)",""],["logger","Logging","Logging.html#method-c-logger","()",""],["logger","Object","Object.html#method-i-logger","()","<p>shortcut to logger\n"],["main","Canuby","Canuby.html#method-c-main","(target)",""],["msbuild","Build","Build.html#method-c-msbuild","(project, project_file)","<p>build a CMake project via MSBUild\nNote: only works on Windows\n"],["new","Canuby","Canuby.html#method-c-new","()",""],["new","Project","Project.html#method-c-new","(url = '')",""],["path=","Project","Project.html#method-i-path-3D","(dir)",""],["pull","Git","Git.html#method-c-pull","(project)","<p>pull updates for a projects repository\n"],["stage","Outputs","Outputs.html#method-c-stage","(project, test = false)","<p>returns a list of the projects stage files\n"],["stage_dir","Paths","Paths.html#method-c-stage_dir","(test = false)","<p>returns stage dir\n"],["LICENSE","","LICENSE.html","","\n<pre>                   GNU GENERAL PUBLIC LICENSE\n                      Version 3, 29 June 2007\n\nCopyright ...</pre>\n"],["README","","README_md.html","","<p>Canuby\n<p><img\nsrc=\"https://img.shields.io/travis/SuperSandro2000/canuby.svg?logo=travis&label=Travis&maxAge=900\">\nâ€¦\n"]]}}